{"ast":null,"code":"var _jsxFileName = \"/home/andrew/School/Spring_2020/WebSystems/NoteTex/note-tex-client/src/NoteLine.js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector, useStore } from 'react-redux';\nimport { beginEdit, endEdit, addNewLine } from './LineActions';\nimport './noteLine.css';\nexport function NoteLine(props) {\n  const noteLine = props.noteLine;\n  const dispatch = useDispatch();\n  const [lineContents, setLineContents] = useState(noteLine.lineContents);\n  const [marker, getMarker] = useState(noteLine.marker);\n  alert(marker);\n  const lineCount = props.lineCount;\n\n  const onBeginEdit = () => {\n    dispatch(beginEdit(noteLine.lineNumber));\n  };\n\n  const onEndEdit = () => {\n    dispatch(endEdit({\n      lineNumber: noteLine.lineNumber,\n      lineContents: lineContents\n    }));\n\n    if (lineContents !== \"\") {\n      dispatch(addNewLine(noteLine.lineNumber));\n    }\n  };\n\n  const processesKeyPress = keyCode => {\n    if (keyCode === 13) {\n      onEndEdit();\n    }\n  };\n\n  if (noteLine.isEditing) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"lineArea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"lineBox\",\n      default: lineContents,\n      onBlur: () => processesKeyPress(13),\n      onKeyDown: event => processesKeyPress(event.keyCode),\n      onChange: e => {\n        setLineContents(e.target.value);\n      },\n      ref: input => input && input.focus(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"lineArea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: onBeginEdit,\n      className: \"noteText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, lineContents, \" : \", noteLine.lineNumber, \" / \", lineCount, \" ~ \", marker));\n  }\n}","map":{"version":3,"sources":["/home/andrew/School/Spring_2020/WebSystems/NoteTex/note-tex-client/src/NoteLine.js"],"names":["React","useState","useDispatch","useSelector","useStore","beginEdit","endEdit","addNewLine","NoteLine","props","noteLine","dispatch","lineContents","setLineContents","marker","getMarker","alert","lineCount","onBeginEdit","lineNumber","onEndEdit","processesKeyPress","keyCode","isEditing","event","e","target","value","input","focus"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,QAAlC,QAAiD,aAAjD;AACA,SAAQC,SAAR,EAAmBC,OAAnB,EAA4BC,UAA5B,QAA6C,eAA7C;AACA,OAAO,gBAAP;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAC7B,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAACS,QAAQ,CAACE,YAAV,CAAhD;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAACS,QAAQ,CAACI,MAAV,CAApC;AACAE,EAAAA,KAAK,CAACF,MAAD,CAAL;AACA,QAAMG,SAAS,GAAGR,KAAK,CAACQ,SAAxB;;AAEA,QAAMC,WAAW,GAAG,MAAK;AACvBP,IAAAA,QAAQ,CAACN,SAAS,CAACK,QAAQ,CAACS,UAAV,CAAV,CAAR;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAK;AACrBT,IAAAA,QAAQ,CAACL,OAAO,CAAC;AAACa,MAAAA,UAAU,EAACT,QAAQ,CAACS,UAArB;AAAiCP,MAAAA,YAAY,EAACA;AAA9C,KAAD,CAAR,CAAR;;AACA,QAAGA,YAAY,KAAK,EAApB,EAAuB;AACrBD,MAAAA,QAAQ,CAACJ,UAAU,CAACG,QAAQ,CAACS,UAAV,CAAX,CAAR;AACD;AACF,GALD;;AAOF,QAAME,iBAAiB,GAAIC,OAAD,IAAY;AACpC,QAAGA,OAAO,KAAK,EAAf,EAAkB;AAChBF,MAAAA,SAAS;AACV;AACF,GAJD;;AAME,MAAGV,QAAQ,CAACa,SAAZ,EAAsB;AACpB,wBACE;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,SAAjB;AAA2B,MAAA,OAAO,EAAEX,YAApC;AAAkD,MAAA,MAAM,EAAE,MAAMS,iBAAiB,CAAC,EAAD,CAAjF;AAAuF,MAAA,SAAS,EAAEG,KAAK,IAAIH,iBAAiB,CAACG,KAAK,CAACF,OAAP,CAA5H;AAA6I,MAAA,QAAQ,EAAEG,CAAC,IAAI;AAACZ,QAAAA,eAAe,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AAAgC,OAA7L;AAA+L,MAAA,GAAG,EAAEC,KAAK,IAAIA,KAAK,IAAIA,KAAK,CAACC,KAAN,EAAtN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GAND,MAMK;AACH,wBACE;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,OAAO,EAAEX,WAAd;AAA2B,MAAA,SAAS,EAAC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,YADH,SACoBF,QAAQ,CAACS,UAD7B,SAC4CF,SAD5C,SAC0DH,MAD1D,CADF,CADF;AAOD;AACF","sourcesContent":["import React, {useState} from 'react';\nimport {useDispatch, useSelector, useStore} from 'react-redux';\nimport {beginEdit, endEdit, addNewLine} from './LineActions'\nimport './noteLine.css';\n\nexport function NoteLine(props){\n  const noteLine = props.noteLine;\n  const dispatch = useDispatch();\n  const [lineContents, setLineContents] = useState(noteLine.lineContents);\n  const [marker, getMarker] = useState(noteLine.marker);\n  alert(marker)\n  const lineCount = props.lineCount\n\n  const onBeginEdit = () =>{\n    dispatch(beginEdit(noteLine.lineNumber));\n  }\n\n  const onEndEdit = () =>{\n    dispatch(endEdit({lineNumber:noteLine.lineNumber, lineContents:lineContents}));\n    if(lineContents !== \"\"){\n      dispatch(addNewLine(noteLine.lineNumber));\n    }\n  }\n\nconst processesKeyPress = (keyCode) =>{\n  if(keyCode === 13){\n    onEndEdit();\n  }\n}\n\n  if(noteLine.isEditing){\n    return(\n      <span className=\"lineArea\">\n        <input className=\"lineBox\" default={lineContents} onBlur={() => processesKeyPress(13)} onKeyDown={event => processesKeyPress(event.keyCode)} onChange={e => {setLineContents(e.target.value)}} ref={input => input && input.focus()}/>\n      </span>\n    )\n  }else{\n    return(\n      <span className=\"lineArea\">\n        <div onClick={onBeginEdit} className=\"noteText\">\n          {lineContents} : {noteLine.lineNumber} / {lineCount} ~ {marker}\n        </div>\n      </span>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}