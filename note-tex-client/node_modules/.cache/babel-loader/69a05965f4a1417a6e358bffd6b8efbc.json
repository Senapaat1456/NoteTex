{"ast":null,"code":"import React, { useState } from 'react';\nexport const UserAction = Object.freeze({\n  FinishLogin: 'FinishLogin',\n  BeginLogout: 'BeginLogout',\n  BeginNewUser: 'BeginNewUser',\n  FinishLoadDocumentList: 'FinishLoadDocumentList',\n  BeginLoadDocument: 'BeginLoadDocument',\n  BeginNewNoteSheet: 'BeginNewNoteSheet'\n});\nconst host = 'http://websystems.senapatiratne.com:1443';\n\nfunction checkForErrors(responce) {\n  if (!responce.ok) {\n    throw Error(`${responce.status}:${responce.statusText}`);\n  }\n\n  return responce;\n}\n\nexport function beginLogin(userName) {\n  return dispatch => {\n    fetch(`${host}/noteSheetList/${userName}`).then(checkForErrors).then(responce => responce.json()).then(data => {\n      if (data.ok) {\n        dispatch(finishLogin(data.usersNoteSheet, userName));\n      } else {\n        alert(\"Login Failed\");\n      }\n    }).catch(e => console.error(e));\n  };\n}\nexport function finishLogin(usersNoteSheets, userName) {\n  return {\n    type: UserAction.FinishLogin,\n    payload: {\n      noteSheetList: usersNoteSheets,\n      userName: userName\n    }\n  };\n}\nexport function beginLoadNoteSheet(userName, noteSheetName) {\n  return dispatch => {\n    fetch(`${host}/noteSheet/${userName}/${noteSheetName.noteSheetName}`).then(checkForErrors).then(responce => responce.json()).then(data => {\n      if (data.ok) {\n        dispatch(finishLoadNoteSheet(data.usersNoteSheets));\n      } else {\n        alert(\"Login Failed\");\n      }\n    }).catch(e => console.error(e));\n  };\n}\nexport function finishLoadNoteSheet(noteSheet) {\n  return {\n    type: UserAction.finishLoadNoteSheet,\n    payload: noteSheet\n  };\n}\nexport function beginNewNoteSheet() {\n  return {\n    type: UserAction.BeginNewNoteSheet,\n    payload: 1\n  };\n}\nexport function beginNewUser(userName) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: {\n      \"userName\": userName\n    }\n  };\n  return dispatch => {\n    fetch(`${host}/users`, options).then(checkForErrors).then(responce => responce.json()).then(data => {\n      if (data.ok) {\n        beginLogin(userName);\n        beginNewNoteSheet();\n      }\n    }).catch(e => console.error(e));\n  };\n}","map":{"version":3,"sources":["/home/andrew/School/Spring_2020/WebSystems/NoteTex/note-tex-client/src/UserActions.js"],"names":["React","useState","UserAction","Object","freeze","FinishLogin","BeginLogout","BeginNewUser","FinishLoadDocumentList","BeginLoadDocument","BeginNewNoteSheet","host","checkForErrors","responce","ok","Error","status","statusText","beginLogin","userName","dispatch","fetch","then","json","data","finishLogin","usersNoteSheet","alert","catch","e","console","error","usersNoteSheets","type","payload","noteSheetList","beginLoadNoteSheet","noteSheetName","finishLoadNoteSheet","noteSheet","beginNewNoteSheet","beginNewUser","options","method","headers","body"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nexport const UserAction = Object.freeze({\n  FinishLogin: 'FinishLogin',\n  BeginLogout: 'BeginLogout',\n  BeginNewUser: 'BeginNewUser',\n  FinishLoadDocumentList:'FinishLoadDocumentList',\n  BeginLoadDocument:'BeginLoadDocument',\n  BeginNewNoteSheet:'BeginNewNoteSheet',\n})\n\nconst host = 'http://websystems.senapatiratne.com:1443';\n\nfunction checkForErrors(responce){\n  if(!responce.ok){\n    throw Error(`${responce.status}:${responce.statusText}`);\n  }\n  return responce;\n}\n\nexport function beginLogin(userName){\n  return dispatch => {\n      fetch(`${host}/noteSheetList/${userName}`)\n        .then(checkForErrors)\n        .then(responce => responce.json())\n        .then(data => {\n          if(data.ok){\n            dispatch(finishLogin(data.usersNoteSheet,userName));\n          }\n          else{\n            alert(\"Login Failed\");\n          }\n        })\n        .catch(e => console.error(e));\n  };\n}\n\nexport function finishLogin(usersNoteSheets, userName){\n  return{\n    type: UserAction.FinishLogin,\n    payload: {noteSheetList:usersNoteSheets, userName:userName}\n  };\n}\n\nexport function beginLoadNoteSheet(userName,noteSheetName){\n  return dispatch => {\n      fetch(`${host}/noteSheet/${userName}/${noteSheetName.noteSheetName}`)\n        .then(checkForErrors)\n        .then(responce => responce.json())\n        .then(data => {\n          if(data.ok){\n            dispatch(finishLoadNoteSheet(data.usersNoteSheets));\n          }\n          else{\n            alert(\"Login Failed\");\n          }\n        })\n        .catch(e => console.error(e));\n  };\n}\n\nexport function finishLoadNoteSheet(noteSheet){\n  return{\n    type: UserAction.finishLoadNoteSheet,\n    payload: noteSheet\n  }\n}\n\nexport function beginNewNoteSheet(){\n  return{\n    type: UserAction.BeginNewNoteSheet,\n    payload:1\n  }\n}\n\nexport function beginNewUser(userName){\n  const options = {method: 'POST',headers:{'Content-Type': 'application/json',},body:{\"userName\":userName},}\n  return dispatch => {\n    fetch(`${host}/users`,options)\n      .then(checkForErrors)\n      .then(responce => responce.json())\n      .then(data => {\n        if(data.ok){\n          beginLogin(userName);\n          beginNewNoteSheet();\n        }\n      })\n      .catch(e => console.error(e));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}