{"ast":null,"code":"var _jsxFileName = \"/home/andrew/School/Spring_2020/WebSystems/NoteTex/note-tex-client/src/NoteLine.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { beginEdit, endEdit, addNewLine } from './LineActions';\nimport './noteLine.css';\nexport function NoteLine(props) {\n  const noteLine = props.noteLine;\n  const dispatch = useDispatch();\n  const [lineContents, setLineContents] = useState(noteLine.lineContents);\n  const [lineCount, setlineCount] = useState(props.lineCount);\n  alert(linenNumber + \":\" + lineCount);\n\n  const onBeginEdit = () => {\n    dispatch(beginEdit(noteLine.lineNumber));\n  };\n\n  const onEndEdit = keyCode => {\n    if (keyCode === 13) {\n      dispatch(endEdit({\n        lineNumber: noteLine.lineNumber,\n        lineContents: lineContents\n      }));\n\n      if (noteLine.lineNumber === lineCount && lineContents !== \"\") {\n        dispatch(addNewLine(lineCount));\n        dispatch(beginEdit(lineCount + 1));\n      }\n    }\n  };\n\n  if (noteLine.isEditing) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"lineArea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"lineBox\",\n      value: lineContents,\n      onBlur: () => onEndEdit(13),\n      onKeyDown: event => onEndEdit(event.keyCode),\n      onChange: e => {\n        setLineContents(e.target.value);\n      },\n      ref: input => input && input.focus(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"lineArea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: onBeginEdit,\n      className: \"noteText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, lineContents, \" : \", noteLine.lineNumber, \" / \", lineCount));\n  }\n}","map":{"version":3,"sources":["/home/andrew/School/Spring_2020/WebSystems/NoteTex/note-tex-client/src/NoteLine.js"],"names":["React","useState","useDispatch","beginEdit","endEdit","addNewLine","NoteLine","props","noteLine","dispatch","lineContents","setLineContents","lineCount","setlineCount","alert","linenNumber","onBeginEdit","lineNumber","onEndEdit","keyCode","isEditing","event","e","target","value","input","focus"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,SAAR,EAAmBC,OAAnB,EAA4BC,UAA5B,QAA6C,eAA7C;AACA,OAAO,gBAAP;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAC7B,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAACO,QAAQ,CAACE,YAAV,CAAhD;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAACM,KAAK,CAACK,SAAP,CAA1C;AAEAE,EAAAA,KAAK,CAACC,WAAW,GAAG,GAAd,GAAoBH,SAArB,CAAL;;AAEA,QAAMI,WAAW,GAAG,MAAK;AACvBP,IAAAA,QAAQ,CAACN,SAAS,CAACK,QAAQ,CAACS,UAAV,CAAV,CAAR;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAIC,OAAD,IAAY;AAE5B,QAAGA,OAAO,KAAK,EAAf,EAAkB;AAChBV,MAAAA,QAAQ,CAACL,OAAO,CAAC;AAACa,QAAAA,UAAU,EAACT,QAAQ,CAACS,UAArB;AAAiCP,QAAAA,YAAY,EAACA;AAA9C,OAAD,CAAR,CAAR;;AACA,UAAGF,QAAQ,CAACS,UAAT,KAAwBL,SAAxB,IAAqCF,YAAY,KAAK,EAAzD,EAA4D;AAC1DD,QAAAA,QAAQ,CAACJ,UAAU,CAACO,SAAD,CAAX,CAAR;AACAH,QAAAA,QAAQ,CAACN,SAAS,CAACS,SAAS,GAAC,CAAX,CAAV,CAAR;AACD;AACF;AACF,GATD;;AAWA,MAAGJ,QAAQ,CAACY,SAAZ,EAAsB;AACpB,wBACE;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,SAAjB;AAA2B,MAAA,KAAK,EAAEV,YAAlC;AAAgD,MAAA,MAAM,EAAE,MAAMQ,SAAS,CAAC,EAAD,CAAvE;AAA6E,MAAA,SAAS,EAAEG,KAAK,IAAIH,SAAS,CAACG,KAAK,CAACF,OAAP,CAA1G;AAA2H,MAAA,QAAQ,EAAEG,CAAC,IAAI;AAACX,QAAAA,eAAe,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AAAgC,OAA3K;AAA6K,MAAA,GAAG,EAAEC,KAAK,IAAIA,KAAK,IAAIA,KAAK,CAACC,KAAN,EAApM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GAND,MAMK;AACH,wBACE;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,OAAO,EAAEV,WAAd;AAA2B,MAAA,SAAS,EAAC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,YADH,SACoBF,QAAQ,CAACS,UAD7B,SAC4CL,SAD5C,CADF,CADF;AAOD;AACF","sourcesContent":["import React, {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {beginEdit, endEdit, addNewLine} from './LineActions'\nimport './noteLine.css';\n\nexport function NoteLine(props){\n  const noteLine = props.noteLine;\n  const dispatch = useDispatch();\n  const [lineContents, setLineContents] = useState(noteLine.lineContents);\n  const [lineCount, setlineCount] = useState(props.lineCount);\n\n  alert(linenNumber + \":\" + lineCount);\n\n  const onBeginEdit = () =>{\n    dispatch(beginEdit(noteLine.lineNumber));\n  }\n\n  const onEndEdit = (keyCode) =>{\n\n    if(keyCode === 13){\n      dispatch(endEdit({lineNumber:noteLine.lineNumber, lineContents:lineContents}));\n      if(noteLine.lineNumber === lineCount && lineContents !== \"\"){\n        dispatch(addNewLine(lineCount))\n        dispatch(beginEdit(lineCount+1))\n      }\n    }\n  }\n\n  if(noteLine.isEditing){\n    return(\n      <span className=\"lineArea\">\n        <input className=\"lineBox\" value={lineContents} onBlur={() => onEndEdit(13)} onKeyDown={event => onEndEdit(event.keyCode)} onChange={e => {setLineContents(e.target.value)}} ref={input => input && input.focus()}/>\n      </span>\n    )\n  }else{\n    return(\n      <span className=\"lineArea\">\n        <div onClick={onBeginEdit} className=\"noteText\">\n          {lineContents} : {noteLine.lineNumber} / {lineCount}\n        </div>\n      </span>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}