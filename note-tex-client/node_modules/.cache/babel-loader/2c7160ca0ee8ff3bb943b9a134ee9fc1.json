{"ast":null,"code":"import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nexport const Action = Object.freeze({\n  BeginEdit: 'BeginEdit',\n  EndEdit: 'EndEdit',\n  LoadLine: 'LoadLine'\n});\nexport function beginEdit(noteLine) {\n  return {\n    type: Action.BeginEdit,\n    payload: noteLine\n  };\n}\nexport function endEdit(noteLine) {\n  useState(lineCount);\n  return {\n    type: Action.EndEdit,\n    payload: noteLine\n  };\n}\nexport function loadLine(noteLine) {\n  return {\n    type: Action.LoadLine,\n    payload: noteLine\n  };\n}\n/*export function newLine(noteLine){\n  return {\n    type: Action.LoadLine,\n    payload: loadLine,\n  };\n}*/\n\n/*export function newLine(){\n  return dispatch => {\n      dispatch(loadMemories(data.memories))\n    }\n  };\n}*/","map":{"version":3,"sources":["/home/andrew/School/Spring_2020/WebSystems/NoteTex/note-tex-client/src/LineActions.js"],"names":["React","useState","useDispatch","Action","Object","freeze","BeginEdit","EndEdit","LoadLine","beginEdit","noteLine","type","payload","endEdit","lineCount","loadLine"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAO,MAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc;AAClCC,EAAAA,SAAS,EAAE,WADuB;AAElCC,EAAAA,OAAO,EAAE,SAFyB;AAGlCC,EAAAA,QAAQ,EAAE;AAHwB,CAAd,CAAf;AAMP,OAAO,SAASC,SAAT,CAAmBC,QAAnB,EAA4B;AACjC,SAAM;AACJC,IAAAA,IAAI,EAAER,MAAM,CAACG,SADT;AAEJM,IAAAA,OAAO,EAAEF;AAFL,GAAN;AAID;AAED,OAAO,SAASG,OAAT,CAAiBH,QAAjB,EAA0B;AAC/BT,EAAAA,QAAQ,CAACa,SAAD,CAAR;AACA,SAAM;AACJH,IAAAA,IAAI,EAAER,MAAM,CAACI,OADT;AAEJK,IAAAA,OAAO,EAAEF;AAFL,GAAN;AAID;AAED,OAAO,SAASK,QAAT,CAAkBL,QAAlB,EAA2B;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAER,MAAM,CAACK,QADR;AAELI,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID;AAED;;;;;;;AAOA","sourcesContent":["import React, {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nexport const Action = Object.freeze({\n  BeginEdit: 'BeginEdit',\n  EndEdit: 'EndEdit',\n  LoadLine: 'LoadLine',\n})\n\nexport function beginEdit(noteLine){\n  return{\n    type: Action.BeginEdit,\n    payload: noteLine\n  };\n}\n\nexport function endEdit(noteLine){\n  useState(lineCount);\n  return{\n    type: Action.EndEdit,\n    payload: noteLine,\n  };\n}\n\nexport function loadLine(noteLine){\n  return {\n    type: Action.LoadLine,\n    payload: noteLine,\n  };\n}\n\n/*export function newLine(noteLine){\n  return {\n    type: Action.LoadLine,\n    payload: loadLine,\n  };\n}*/\n\n/*export function newLine(){\n  return dispatch => {\n      dispatch(loadMemories(data.memories))\n    }\n  };\n}*/\n"]},"metadata":{},"sourceType":"module"}