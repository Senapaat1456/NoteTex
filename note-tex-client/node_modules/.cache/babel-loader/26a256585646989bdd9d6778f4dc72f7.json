{"ast":null,"code":"export const UserAction = Object.freeze({\n  BeginLogin: 'BeginLogin',\n  FinishLogin: 'FinishLogin',\n  Logout: 'Logout',\n  BeginNewUser: 'BeginNewUser',\n  BeginLoadSheet: 'BeginLoadSheet',\n  FinishLoadSheet: 'FinishLoadSheet',\n  FinishNewNoteSheet: 'FinishNewNoteSheet',\n  FinishDelete: 'FinishDelete',\n  StartWaiting: 'StartWaiting',\n  StopWaiting: 'StopWaiting'\n});\nconst host = 'http://websystems.senapatiratne.com:1443';\nexport function startWaiting() {\n  return {\n    type: UserAction.StartWaiting\n  };\n}\nexport function stopWaiting() {\n  return {\n    type: UserAction.StopWaiting\n  };\n}\nexport function checkForErrors(responce) {\n  if (!responce.ok) {\n    throw Error(`${responce.status}:${responce.statusText}`);\n  }\n\n  return responce;\n}\nexport function beginNewNoteSheet(newNoteSheetName, userName) {\n  return dispatch => {\n    dispatch(startWaiting());\n    const newBody = {\n      userName: userName,\n      sheetName: newNoteSheetName\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newBody)\n    };\n    fetch(`${host}/noteSheetList`, options).then(checkForErrors).then(responce => responce.json()).then(data => {\n      if (data.ok) {\n        dispatch(finishNewNoteSheet(newNoteSheetName));\n        dispatch(stopWaiting());\n      }\n    }).catch(e => console.error(e));\n  };\n}\nexport function finishNewNoteSheet(newNoteSheetName) {\n  return {\n    type: UserAction.FinishNewNoteSheet,\n    payload: {\n      noteSheetName: newNoteSheetName\n    }\n  };\n}\nexport function beginDelete(userName, currentNoteSheet_id) {\n  return dispatch => {\n    dispatch(startWaiting());\n    const newBody = {\n      userName: userName,\n      noteSheet_id: currentNoteSheet_id\n    };\n    const options = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newBody)\n    };\n    fetch(`${host}/noteSheet`, options).then(checkForErrors).then(responce => responce.json()).then(data => {\n      if (data.ok) {\n        dispatch(finishDelete(currentNoteSheet_id));\n        dispatch(stopWaiting());\n      }\n    }).catch(e => console.error(e));\n  };\n}\nexport function finishDelete(currentNoteSheet_id) {\n  return {\n    type: UserAction.FinishDelete,\n    payload: currentNoteSheet_id\n  };\n}\nexport function beginLogin(userName) {\n  return dispatch => {\n    dispatch(startWaiting());\n    fetch(`${host}/noteSheetList/${userName}`).then(checkForErrors).then(responce => responce.json()).then(data => {\n      if (data.ok) {\n        dispatch(finishLogin(data.usersNoteSheets, userName));\n        dispatch(stopWaiting());\n      } else {\n        alert(\"Login Failed. Try Again. Click 'New User' if making you are making a new acount.\");\n      }\n    }).catch(e => console.error(e));\n  };\n}\nexport function finishLogin(usersNoteSheets, userName) {\n  return {\n    type: UserAction.FinishLogin,\n    payload: {\n      noteSheetList: usersNoteSheets,\n      userName: userName\n    }\n  };\n}\nexport function beginNewUser(userName) {\n  const newBody = {\n    userName: userName\n  };\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newBody)\n  };\n  return dispatch => {\n    //dispatch(startWaiting());\n    fetch(`${host}/users`, options).then(checkForErrors).then(responce => responce.json()).then(data => {\n      if (data.ok) {\n        dispatch(beginLogin(userName)); //dispatch(stopWaiting());\n      }\n    }).catch(e => console.error(e));\n  };\n}\nexport function beginLoadSheet(userName, noteSheet) {\n  return dispatch => {\n    dispatch(startWaiting());\n    fetch(`${host}/noteSheetFind/${userName}/${noteSheet.noteSheetName}`).then(checkForErrors).then(responce => responce.json()).then(data => {\n      if (data.ok) {\n        dispatch(finishLoadSheet(data.requestedNoteSheet[0]));\n        dispatch(stopWaiting());\n      }\n    }).catch(e => console.error(e));\n  };\n}\nexport function finishLoadSheet(noteSheet) {\n  return {\n    type: UserAction.FinishLoadSheet,\n    payload: noteSheet\n  };\n}\nexport function logout() {\n  return {\n    type: UserAction.Logout,\n    payload: null\n  };\n}","map":{"version":3,"sources":["/home/andrew/School/Spring_2020/WebSystems/NoteTex/note-tex-client/src/UserActions.js"],"names":["UserAction","Object","freeze","BeginLogin","FinishLogin","Logout","BeginNewUser","BeginLoadSheet","FinishLoadSheet","FinishNewNoteSheet","FinishDelete","StartWaiting","StopWaiting","host","startWaiting","type","stopWaiting","checkForErrors","responce","ok","Error","status","statusText","beginNewNoteSheet","newNoteSheetName","userName","dispatch","newBody","sheetName","options","method","headers","body","JSON","stringify","fetch","then","json","data","finishNewNoteSheet","catch","e","console","error","payload","noteSheetName","beginDelete","currentNoteSheet_id","noteSheet_id","finishDelete","beginLogin","finishLogin","usersNoteSheets","alert","noteSheetList","beginNewUser","beginLoadSheet","noteSheet","finishLoadSheet","requestedNoteSheet","logout"],"mappings":"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","sourcesContent":["export const UserAction = Object.freeze({\n  BeginLogin: 'BeginLogin',\n  FinishLogin: 'FinishLogin',\n  Logout: 'Logout',\n  BeginNewUser: 'BeginNewUser',\n  BeginLoadSheet:'BeginLoadSheet',\n  FinishLoadSheet:'FinishLoadSheet',\n  FinishNewNoteSheet:'FinishNewNoteSheet',\n  FinishDelete:'FinishDelete',\n  StartWaiting:'StartWaiting',\n  StopWaiting:'StopWaiting',\n})\n\nconst host = 'http://websystems.senapatiratne.com:1443';\n\n\nexport function startWaiting(){\n  return {\n    type:UserAction.StartWaiting\n  }\n}\nexport function stopWaiting(){\n  return{\n    type:UserAction.StopWaiting\n  }\n}\n\nexport function checkForErrors(responce){\n  if(!responce.ok){\n    throw Error(`${responce.status}:${responce.statusText}`);\n  }\n  return responce;\n}\n\nexport function beginNewNoteSheet(newNoteSheetName,userName){\n  return dispatch => {\n    dispatch(startWaiting());\n    const newBody = {userName:userName,sheetName:newNoteSheetName};\n    const options = {method: 'POST', headers:{'Content-Type': 'application/json'}, body:JSON.stringify(newBody)};\n    fetch(`${host}/noteSheetList`,options)\n      .then(checkForErrors)\n      .then(responce => responce.json())\n      .then(data => {\n        if(data.ok){\n          dispatch(finishNewNoteSheet(newNoteSheetName));\n          dispatch(stopWaiting());\n        }\n\n      })\n      .catch(e => console.error(e));\n  }\n}\n\nexport function finishNewNoteSheet(newNoteSheetName){\n  return{\n    type:UserAction.FinishNewNoteSheet,\n    payload:{noteSheetName:newNoteSheetName}\n  }\n}\n\n\nexport function beginDelete(userName,currentNoteSheet_id){\n  return dispatch => {\n      dispatch(startWaiting());\n      const newBody = {userName:userName,noteSheet_id:currentNoteSheet_id};\n      const options = {method: 'DELETE', headers:{'Content-Type': 'application/json'}, body:JSON.stringify(newBody)};\n      fetch(`${host}/noteSheet`,options)\n        .then(checkForErrors)\n        .then(responce => responce.json())\n        .then(data => {\n          if(data.ok){\n            dispatch(finishDelete(currentNoteSheet_id));\n            dispatch(stopWaiting());\n          }\n\n        })\n        .catch(e => console.error(e));\n  };\n}\n\nexport function finishDelete(currentNoteSheet_id){\n  return{\n    type: UserAction.FinishDelete,\n    payload: currentNoteSheet_id\n  }\n}\n\nexport function beginLogin(userName){\n  return dispatch => {\n      dispatch(startWaiting());\n      fetch(`${host}/noteSheetList/${userName}`)\n        .then(checkForErrors)\n        .then(responce => responce.json())\n        .then(data => {\n          if(data.ok){\n            dispatch(finishLogin(data.usersNoteSheets,userName));\n            dispatch(stopWaiting());\n          }\n          else{\n            alert(\"Login Failed. Try Again. Click 'New User' if making you are making a new acount.\");\n          }\n        })\n        .catch(e => console.error(e));\n  };\n}\n\n\nexport function finishLogin(usersNoteSheets, userName){\n  return{\n    type: UserAction.FinishLogin,\n    payload: {noteSheetList:usersNoteSheets, userName:userName}\n  };\n}\n\n\nexport function beginNewUser(userName){\n\n  const newBody = {userName:userName};\n  const options = {method: 'POST', headers:{'Content-Type': 'application/json'}, body:JSON.stringify(newBody)};\n  return dispatch => {\n    //dispatch(startWaiting());\n    fetch(`${host}/users`,options)\n      .then(checkForErrors)\n      .then(responce => responce.json())\n      .then(data => {\n        if(data.ok){\n          dispatch(beginLogin(userName));\n          //dispatch(stopWaiting());\n        }\n      })\n      .catch(e => console.error(e));\n  };\n}\n\nexport function beginLoadSheet(userName, noteSheet){\n  return dispatch => {\n      dispatch(startWaiting());\n      fetch(`${host}/noteSheetFind/${userName}/${noteSheet.noteSheetName}`).then(checkForErrors).then(responce => responce.json()).then(data => {\n          if(data.ok){\n            dispatch(finishLoadSheet(data.requestedNoteSheet[0]))\n            dispatch(stopWaiting());\n          }\n        }).catch(e => console.error(e));\n  }\n}\n\nexport function finishLoadSheet(noteSheet){\n  return{\n    type:UserAction.FinishLoadSheet,\n    payload:noteSheet\n  }\n}\n\nexport function logout(){\n  return{\n    type:UserAction.Logout,\n    payload:null\n  }\n}\n"]},"metadata":{},"sourceType":"module"}