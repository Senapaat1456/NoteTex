{"ast":null,"code":"var _jsxFileName = \"/home/andrew/School/Spring_2020/WebSystems/NoteTex/note-tex-client/src/App.js\";\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NoteLine } from './NoteLine'; //import {UserBox} from './UserBox';\n\nimport { loadLine, endEdit, beginEdit } from './LineActions';\nimport { beginLogin, beginNewNoteSheet } from './UserActions';\nimport { store } from './LineStore';\nimport MathJax from 'react-mathjax';\n\nfunction App() {\n  window.addEventListener('keydown', function (e) {\n    if (e.keyIdentifier == 'U+0008' || e.keyIdentifier == 'Backspace' || e.keyCode == 8) {\n      if (e.target == document.body) {\n        e.preventDefault();\n        return false;\n      }\n    }\n  }, true);\n  const noteLines = useSelector(state => state.noteLines);\n  const lineCount = useSelector(state => state.lineCount);\n  var currentUserName = useSelector(state => state.userName);\n  const noteSheetList = useSelector(state => state.noteSheetList);\n  alert(\"app: \", noteSheetList);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadLine({\n      lineNumber: 1,\n      lineContents: \"\"\n    }));\n    dispatch(beginEdit(1));\n    dispatch(beginNewNoteSheet());\n  }, [dispatch]);\n\n  const processesKeyPress = keyCode => {\n    if (keyCode === 13) {\n      onLogin();\n    }\n  };\n\n  const onLogin = () => {\n    dispatch(beginLogin(currentUserName));\n  }; //console.log(\"Pre-sort:\" + JSON.stringify(noteLines))\n  //console.log(store.getState())\n  //const sortedLines = Object.values(noteLines).sort((a,b) => a.lineNumber - b.lineNumber);\n  //console.log(\"Post-sort:\" + JSON.stringify(noteLines))\n\n\n  if (currentUserName == null || currentUserName === \"\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \" Note-Tex \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"leftMargin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, currentUserName), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, noteLines.map(line => /*#__PURE__*/React.createElement(NoteLine, {\n      key: line.lineNumber + line.lineContents,\n      lineCount: lineCount,\n      noteLine: line,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rightMargin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"loginBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"inputBox\",\n      onChange: e => currentUserName = e.target.value,\n      onKeyDown: event => processesKeyPress(event.keyCode),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"loginButton\",\n      onClick: onLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, \"Login\")))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \" Note-Tex \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"leftMargin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, currentUserName), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, noteLines.map(line => /*#__PURE__*/React.createElement(NoteLine, {\n      key: line.lineNumber + line.lineContents,\n      lineCount: lineCount,\n      noteLine: line,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 39\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rightMargin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 1\n      }\n    }, noteSheetList.map(sheet => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"noteSheetName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 36\n      }\n    }, sheet.noteSheetName)), \" \"))));\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/home/andrew/School/Spring_2020/WebSystems/NoteTex/note-tex-client/src/App.js"],"names":["React","useEffect","useDispatch","useSelector","NoteLine","loadLine","endEdit","beginEdit","beginLogin","beginNewNoteSheet","store","MathJax","App","window","addEventListener","e","keyIdentifier","keyCode","target","document","body","preventDefault","noteLines","state","lineCount","currentUserName","userName","noteSheetList","alert","dispatch","lineNumber","lineContents","processesKeyPress","onLogin","map","line","value","event","sheet","noteSheetName"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport './App.css';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {NoteLine} from './NoteLine';\n//import {UserBox} from './UserBox';\nimport {loadLine, endEdit, beginEdit} from './LineActions';\nimport {beginLogin,beginNewNoteSheet}  from './UserActions';\nimport {store} from './LineStore';\nimport MathJax from 'react-mathjax';\n\nfunction App() {\n  window.addEventListener('keydown',function(e){if(e.keyIdentifier=='U+0008'||e.keyIdentifier=='Backspace'||e.keyCode==8){if(e.target==document.body){e.preventDefault();return false;}}},true);\n\n  const noteLines = useSelector(state => state.noteLines);\n  const lineCount = useSelector(state => state.lineCount);\n  var    currentUserName = useSelector(state => state.userName);\n  const noteSheetList = useSelector(state => state.noteSheetList);\n  alert(\"app: \", noteSheetList)\n  const dispatch = useDispatch();\n\n  useEffect(() =>{\n    dispatch(loadLine({lineNumber: 1, lineContents: \"\"}));\n    dispatch(beginEdit(1));\n    dispatch(beginNewNoteSheet())\n  },[dispatch]);\n\n  const processesKeyPress = (keyCode) =>{\n    if(keyCode === 13){\n      onLogin();\n    }\n  }\n\n  const onLogin = () =>{\n       dispatch(beginLogin(currentUserName))\n  }\n\n  //console.log(\"Pre-sort:\" + JSON.stringify(noteLines))\n  //console.log(store.getState())\n  //const sortedLines = Object.values(noteLines).sort((a,b) => a.lineNumber - b.lineNumber);\n  //console.log(\"Post-sort:\" + JSON.stringify(noteLines))\n  if(currentUserName == null || currentUserName === \"\"){\n    return (\n      <div className=\"App\">\n\n        <div className=\"header\">\n          <div className=\"title\"> Note-Tex </div>\n        </div>\n\n        <div className=\"middle\">\n\n          <div className=\"leftMargin\">\n            {currentUserName}\n          </div>\n\n          <div className=\"body\">\n             {noteLines.map(line => <NoteLine key={line.lineNumber + line.lineContents} lineCount={lineCount} noteLine={line}/>)}\n          </div>\n\n          <div className=\"rightMargin\">\n            {/*<UserBox userName={currentUserName} noteSheetList={noteSheetList}/>*/}\n            <span className=\"loginBox\">\n              <input className=\"inputBox\" onChange={e => currentUserName = e.target.value} onKeyDown={event => processesKeyPress(event.keyCode)}/>\n              <button className=\"loginButton\" onClick={onLogin}>Login</button>\n            </span>\n          </div>\n\n        </div>\n\n      </div>\n    );\n  }else{\n      return (\n        <div className=\"App\">\n\n          <div className=\"header\">\n            <div className=\"title\"> Note-Tex </div>\n          </div>\n\n          <div className=\"middle\">\n\n            <div className=\"leftMargin\">\n              {currentUserName}\n            </div>\n\n            <div className=\"body\">\n               {noteLines.map(line => <NoteLine key={line.lineNumber + line.lineContents} lineCount={lineCount} noteLine={line}/>)}\n            </div>\n\n            <div className=\"rightMargin\">\n<span>{ noteSheetList.map(sheet => <div className=\"noteSheetName\">{sheet.noteSheetName}</div>)} </span>\n            </div>\n\n          </div>\n\n        </div>\n      );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}