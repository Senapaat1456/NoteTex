{"ast":null,"code":"import { LineAction } from './LineActions';\nimport { UserAction } from './UserActions';\nconst initialState = {\n  lineCount: 0,\n  noteLines: [],\n  userName: \"\",\n  noteSheets: [],\n  noteSheet_id: 0\n};\n\nfunction noteLinesReducer(noteLinesArray, action) {\n  switch (action.type) {\n    case UserAction.FinishDelete:\n      return [];\n\n    case LineAction.StartEdit:\n      return noteLinesArray.map(line => {\n        if (line.lineNumber === action.payload) {\n          return { ...line,\n            isEditing: true\n          };\n        } else {\n          return line;\n        }\n      });\n\n    case LineAction.EndEdit:\n      return noteLinesArray.map(line => {\n        if (line.lineNumber === action.payload.lineNumber) {\n          return action.payload;\n        } else {\n          return line;\n        }\n      });\n\n    case UserAction.Logout:\n      return [];\n\n    case LineAction.LoadLine:\n      return [action.payload, ...noteLinesArray];\n\n    case LineAction.AddNewLine:\n      //console.log(\"Old: \"+ JSON.stringify(noteLinesArray))\n      const oldList = noteLinesArray.map(line => {\n        //console.log(\"a Line: \"+ JSON.stringify(line))\n        if (line.lineNumber <= action.payload) {\n          return {\n            lineContents: line.lineContents + \"\",\n            lineNumber: line.lineNumber,\n            marked: \"under\"\n          };\n        } else {\n          return {\n            lineContents: line.lineContents + \"\",\n            lineNumber: line.lineNumber + 1,\n            marked: \"Over\"\n          };\n        }\n      });\n      const temp = {\n        lineNumber: action.payload + 1,\n        lineContents: \"\",\n        isEditing: true,\n        marked: \"new\"\n      }; //console.log(\"New: \"+ JSON.stringify([...oldList, temp].sort((a,b) => {return a.lineNumber - b.lineNumber})))\n\n      return [...oldList, temp].sort((a, b) => {\n        return a.lineNumber - b.lineNumber;\n      });\n\n    case LineAction.RemoveLine:\n      const newList = noteLinesArray.filter(line => line.lineNumber != action.payload.lineNumber).map(line => {\n        //console.log(\"a Line: \"+ JSON.stringify(line))\n        if (line.lineNumber <= action.payload.lineNumber) {\n          return {\n            lineContents: line.lineContents + \"\",\n            lineNumber: line.lineNumber,\n            marked: \"under\"\n          };\n        } else {\n          return {\n            lineContents: line.lineContents + \"\",\n            lineNumber: line.lineNumber - 1,\n            marked: \"Over\"\n          };\n        }\n      }); //console.log(\"New: \"+ JSON.stringify([...oldList, temp].sort((a,b) => {return a.lineNumber - b.lineNumber})))\n\n      return newList.sort((a, b) => {\n        return a.lineNumber - b.lineNumber;\n      });\n\n    case UserAction.FinishLoadSheet:\n      return JSON.parse(action.payload.contents);\n    //.sort((a,b) => {return a.lineNumber - b.lineNumber});\n\n    default:\n      return noteLinesArray;\n  }\n}\n\nfunction lineCountReducer(lineCountVar, action) {\n  switch (action.type) {\n    case UserAction.FinishDelete:\n      return 0;\n\n    case LineAction.LoadLine:\n      return lineCountVar + 1;\n\n    case LineAction.AddNewLine:\n      return lineCountVar + 1;\n\n    case LineAction.RemoveLine:\n      return lineCountVar - 1;\n\n    case UserAction.FinishLoadSheet:\n      return action.payload.lineCount;\n\n    case UserAction.Logout:\n      return 0;\n\n    default:\n      return lineCountVar;\n  }\n}\n\nfunction userNameReducer(userNameVar, action) {\n  switch (action.type) {\n    case UserAction.FinishLogin:\n      return action.payload.userName;\n\n    case UserAction.Logout:\n      return \"\";\n\n    default:\n      return userNameVar;\n  }\n}\n\nfunction noteSheetsReducer(noteSheetsArray, action) {\n  switch (action.type) {\n    case UserAction.finishDelete:\n      return noteSheetsArray.map(sheet => {\n        if (sheet.noteSheetName === action.payload) {\n          return { ...sheet,\n            isActive: true\n          };\n        } else {\n          return { ...sheet,\n            isActive: false\n          };\n        }\n      });\n\n    case UserAction.BeginNewNoteSheet:\n      return [...noteSheetsArray, {\n        noteSheetName: \"new sheet\"\n      }];\n\n    case UserAction.FinishLogin:\n      return action.payload.noteSheetList;\n\n    case UserAction.FinishLoadSheet:\n      return noteSheetsArray.filter(sheet => sheet.noteSheet_id !== action.payload);\n\n    case UserAction.Logout:\n      return [];\n\n    default:\n      return noteSheetsArray;\n  }\n}\n\nfunction noteSheet_idReducer(oldId, action) {\n  switch (action.type) {\n    case UserAction.FinishLoadSheet:\n      return action.payload.noteSheet_id;\n\n    default:\n      return oldId;\n  }\n}\n\nfunction reducer(state = initialState, action) {\n  return {\n    lineCount: lineCountReducer(state.lineCount, action),\n    noteLines: noteLinesReducer(state.noteLines, action),\n    userName: userNameReducer(state.userName, action),\n    noteSheets: noteSheetsReducer(state.noteSheets, action),\n    noteSheet_id: noteSheet_idReducer(state.noteSheet_id, action)\n  };\n}\n\nexport default reducer;","map":{"version":3,"sources":["/home/andrew/School/Spring_2020/WebSystems/NoteTex/note-tex-client/src/LineReducer.js"],"names":["LineAction","UserAction","initialState","lineCount","noteLines","userName","noteSheets","noteSheet_id","noteLinesReducer","noteLinesArray","action","type","FinishDelete","StartEdit","map","line","lineNumber","payload","isEditing","EndEdit","Logout","LoadLine","AddNewLine","oldList","lineContents","marked","temp","sort","a","b","RemoveLine","newList","filter","FinishLoadSheet","JSON","parse","contents","lineCountReducer","lineCountVar","userNameReducer","userNameVar","FinishLogin","noteSheetsReducer","noteSheetsArray","finishDelete","sheet","noteSheetName","isActive","BeginNewNoteSheet","noteSheetList","noteSheet_idReducer","oldId","reducer","state"],"mappings":"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","sourcesContent":["import {LineAction} from './LineActions';\nimport {UserAction} from './UserActions'\nconst initialState = {\n  lineCount: 0,\n  noteLines: [],\n  userName:\"\",\n  noteSheets:[],\n  noteSheet_id:0\n}\n\nfunction noteLinesReducer(noteLinesArray, action){\n  switch (action.type) {\n\n\n    case UserAction.FinishDelete:\n      return [];\n\n\n    case LineAction.StartEdit:\n      return noteLinesArray.map(line =>{\n        if(line.lineNumber === action.payload){\n          return{...line, isEditing:true};\n        }\n        else{\n          return line;\n        }\n      });\n\n\n    case LineAction.EndEdit:\n      return noteLinesArray.map(line =>{\n           if(line.lineNumber === action.payload.lineNumber){\n             return action.payload;\n           }\n           else{\n             return line;\n           }\n         });\n\n     case UserAction.Logout:\n      return [];\n\n\n\n    case LineAction.LoadLine:\n      return [action.payload, ...noteLinesArray]\n\n\n    case LineAction.AddNewLine:\n      //console.log(\"Old: \"+ JSON.stringify(noteLinesArray))\n      const oldList = noteLinesArray.map(line =>{\n\n        //console.log(\"a Line: \"+ JSON.stringify(line))\n\n        if(line.lineNumber <= action.payload){\n\n          return {lineContents:line.lineContents+\"\", lineNumber:line.lineNumber, marked:\"under\"}\n\n        }\n        else{\n\n          return{lineContents:line.lineContents+\"\", lineNumber:line.lineNumber+1, marked:\"Over\"}\n\n        }\n      })\n      const temp = {lineNumber:action.payload+1, lineContents:\"\", isEditing:true, marked:\"new\"}\n      //console.log(\"New: \"+ JSON.stringify([...oldList, temp].sort((a,b) => {return a.lineNumber - b.lineNumber})))\n      return [...oldList, temp].sort((a,b) => {return a.lineNumber - b.lineNumber});\n\n\n    case LineAction.RemoveLine:\n      const newList = noteLinesArray.filter(line => line.lineNumber != action.payload.lineNumber).map(line =>{\n\n        //console.log(\"a Line: \"+ JSON.stringify(line))\n\n        if(line.lineNumber <= action.payload.lineNumber ){\n\n          return {lineContents:line.lineContents+\"\", lineNumber:line.lineNumber, marked:\"under\"}\n\n        }\n        else{\n\n          return{lineContents:line.lineContents+\"\", lineNumber:line.lineNumber-1, marked:\"Over\"}\n\n        }\n      })\n      //console.log(\"New: \"+ JSON.stringify([...oldList, temp].sort((a,b) => {return a.lineNumber - b.lineNumber})))\n      return newList.sort((a,b) => {return a.lineNumber - b.lineNumber});\n\n\n    case UserAction.FinishLoadSheet:\n      return JSON.parse(action.payload.contents)//.sort((a,b) => {return a.lineNumber - b.lineNumber});\n\n    default:\n      return noteLinesArray;\n\n  }\n}\n\nfunction lineCountReducer(lineCountVar, action){\n  switch (action.type) {\n\n\n    case UserAction.FinishDelete:\n      return 0;\n\n\n    case LineAction.LoadLine:\n      return (lineCountVar+1);\n\n\n    case LineAction.AddNewLine:\n      return (lineCountVar+1);\n\n\n    case LineAction.RemoveLine:\n      return (lineCountVar-1)\n\n\n    case UserAction.FinishLoadSheet:\n      return action.payload.lineCount;\n\n\n    case UserAction.Logout:\n      return 0;\n\n\n    default:\n      return lineCountVar;\n  }\n}\n\nfunction userNameReducer(userNameVar, action){\n  switch (action.type){\n\n\n    case UserAction.FinishLogin:\n      return action.payload.userName;\n\n\n    case UserAction.Logout:\n      return \"\";\n\n    default:\n      return userNameVar;\n\n  }\n}\n\nfunction noteSheetsReducer(noteSheetsArray, action){\n  switch (action.type){\n\n\n    case UserAction.finishDelete:\n      return noteSheetsArray.map(sheet =>{\n        if(sheet.noteSheetName === action.payload){\n          return{...sheet, isActive:true};\n        }\n        else{\n          return{...sheet, isActive:false};\n        }\n      });\n\n    case UserAction.BeginNewNoteSheet:\n      return [...noteSheetsArray,{noteSheetName:\"new sheet\"}]\n\n\n    case UserAction.FinishLogin:\n      return action.payload.noteSheetList;\n\n\n    case UserAction.FinishLoadSheet:\n      return noteSheetsArray.filter(sheet => sheet.noteSheet_id !== action.payload)\n\n\n      case UserAction.Logout:\n        return [];\n\n    default:\n      return noteSheetsArray;\n  }\n}\n\nfunction noteSheet_idReducer(oldId, action){\n  switch (action.type){\n\n\n    case UserAction.FinishLoadSheet:\n      return action.payload.noteSheet_id;\n\n    default:\n      return oldId;\n  }\n}\n\nfunction reducer(state = initialState, action){\n    return{\n      lineCount: lineCountReducer(state.lineCount, action),\n      noteLines: noteLinesReducer(state.noteLines, action),\n      userName: userNameReducer(state.userName, action),\n      noteSheets: noteSheetsReducer(state.noteSheets, action),\n      noteSheet_id: noteSheet_idReducer(state.noteSheet_id, action)\n    };\n}\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}