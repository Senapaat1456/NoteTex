{"ast":null,"code":"export const Action = Object.freeze({\n  BeginEdit: 'BeginEdit',\n  EndEdit: 'EndEdit',\n  LoadLine: 'LoadLine'\n});\nexport function beginEdit(noteLine) {\n  return {\n    type: Action.BeginEdit,\n    payload: noteLine\n  };\n}\nexport function loadLine(noteLine) {\n  return {\n    type: Action.LoadLine,\n    payload: memories\n  };\n}\nexport function newLine() {\n  return dispatch => {\n    fetch(`${host}/memories/${month}/${day}`).then(checkForErrors).then(responce => responce.json()).then(data => {\n      if (data.ok) {\n        dispatch(loadMemories(data.memories));\n      }\n    }).catch(e => console.error(e));\n  };\n}","map":{"version":3,"sources":["/home/andrew/School/Spring_2020/WebSystems/NoteTex/note-tex-client/src/LineActions.js"],"names":["Action","Object","freeze","BeginEdit","EndEdit","LoadLine","beginEdit","noteLine","type","payload","loadLine","memories","newLine","dispatch","fetch","host","month","day","then","checkForErrors","responce","json","data","ok","loadMemories","catch","e","console","error"],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc;AAClCC,EAAAA,SAAS,EAAE,WADuB;AAElCC,EAAAA,OAAO,EAAE,SAFyB;AAGlCC,EAAAA,QAAQ,EAAE;AAHwB,CAAd,CAAf;AAMP,OAAO,SAASC,SAAT,CAAmBC,QAAnB,EAA4B;AACjC,SAAM;AACJC,IAAAA,IAAI,EAAER,MAAM,CAACG,SADT;AAEJM,IAAAA,OAAO,EAAEF;AAFL,GAAN;AAID;AAED,OAAO,SAASG,QAAT,CAAkBH,QAAlB,EAA2B;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAER,MAAM,CAACK,QADR;AAELI,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID;AAED,OAAO,SAASC,OAAT,GAAkB;AACvB,SAAOC,QAAQ,IAAI;AACjBC,IAAAA,KAAK,CAAE,GAAEC,IAAK,aAAYC,KAAM,IAAGC,GAAI,EAAlC,CAAL,CACGC,IADH,CACQC,cADR,EAEGD,IAFH,CAEQE,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFpB,EAGGH,IAHH,CAGQI,IAAI,IAAI;AACZ,UAAGA,IAAI,CAACC,EAAR,EAAW;AACTV,QAAAA,QAAQ,CAACW,YAAY,CAACF,IAAI,CAACX,QAAN,CAAb,CAAR;AACD;AACF,KAPH,EAQGc,KARH,CAQSC,CAAC,IAAIC,OAAO,CAACC,KAAR,CAAcF,CAAd,CARd;AASD,GAVD;AAWD","sourcesContent":["export const Action = Object.freeze({\n  BeginEdit: 'BeginEdit',\n  EndEdit: 'EndEdit',\n  LoadLine: 'LoadLine',\n})\n\nexport function beginEdit(noteLine){\n  return{\n    type: Action.BeginEdit,\n    payload: noteLine\n  };\n}\n\nexport function loadLine(noteLine){\n  return {\n    type: Action.LoadLine,\n    payload: memories,\n  };\n}\n\nexport function newLine(){\n  return dispatch => {\n    fetch(`${host}/memories/${month}/${day}`)\n      .then(checkForErrors)\n      .then(responce => responce.json())\n      .then(data => {\n        if(data.ok){\n          dispatch(loadMemories(data.memories))\n        }\n      })\n      .catch(e => console.error(e));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}