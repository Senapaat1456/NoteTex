{"ast":null,"code":"var _jsxFileName = \"/home/andrew/School/Spring_2020/WebSystems/NoteTex/note-tex-client/src/App.js\";\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NoteLine } from './NoteLine';\nimport { loadLine, endEdit } from './LineActions';\nimport { store } from './LineStore';\nimport MathJax from 'react-mathjax';\n\nfunction App() {\n  const noteLines = useSelector(state => state.noteLines);\n  const lineCount = useSelector(state => state.lineCount);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadLine({\n      lineNumber: 1,\n      lineContents: \"\"\n    }));\n  }, []); //console.log(\"Pre-sort:\" + JSON.stringify(noteLines))\n  //console.log(store.getState())\n  //const sortedLines = Object.values(noteLines).sort((a,b) => a.lineNumber - b.lineNumber);\n  //console.log(\"Post-sort:\" + JSON.stringify(noteLines))\n\n  var temp = \"Equation: $(3\\\\times 4) \\\\div (5-3)$\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \" Note-Tex \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"leftMargin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, noteLines.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MathJax.Provider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, \"This is an inline math formula: \", /*#__PURE__*/React.createElement(MathJax.Node, {\n    inline: true,\n    formula: 'a = b',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 41\n    }\n  }), \"And a block one:\", /*#__PURE__*/React.createElement(MathJax.Node, {\n    formula: temp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }))), noteLines.map(line => /*#__PURE__*/React.createElement(NoteLine, {\n    key: line.lineNumber + line.lineContents,\n    lineCount: lineCount,\n    noteLine: line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 35\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rightMargin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MathJax.Provider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(MathJax.Node, {\n    formula: temp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/andrew/School/Spring_2020/WebSystems/NoteTex/note-tex-client/src/App.js"],"names":["React","useEffect","useDispatch","useSelector","NoteLine","loadLine","endEdit","store","MathJax","App","noteLines","state","lineCount","dispatch","lineNumber","lineContents","temp","length","map","line"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,QAAR,EAAkBC,OAAlB,QAAgC,eAAhC;AACA,SAAQC,KAAR,QAAoB,aAApB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,SAASC,GAAT,GAAe;AAGb,QAAMC,SAAS,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,SAAhB,CAA7B;AACA,QAAME,SAAS,GAAGT,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,SAAhB,CAA7B;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACbY,IAAAA,QAAQ,CAACR,QAAQ,CAAC;AAACS,MAAAA,UAAU,EAAE,CAAb;AAAgBC,MAAAA,YAAY,EAAE;AAA9B,KAAD,CAAT,CAAR;AACD,GAFQ,EAEP,EAFO,CAAT,CAPa,CAWb;AACA;AACA;AACA;;AACA,MAAIC,IAAI,GAAG,sCAAX;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAFF,eAME;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,SAAS,CAACO,MADb,CAFF,eAME;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,OAAD,CAAS,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDACoC,oBAAC,OAAD,CAAS,IAAT;AAAc,IAAA,MAAM,MAApB;AAAqB,IAAA,OAAO,EAAE,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpC,mCAII,oBAAC,OAAD,CAAS,IAAT;AAAc,IAAA,OAAO,EAAED,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADI,CADA,EASIN,SAAS,CAACQ,GAAV,CAAcC,IAAI,iBAAI,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACL,UAAL,GAAkBK,IAAI,CAACJ,YAAtC;AAAmD,IAAA,SAAS,EAAEH,SAA9D;AAAyE,IAAA,QAAQ,EAAEO,IAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,CATJ,CANF,eAkBE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACR,oBAAC,OAAD,CAAS,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACU,oBAAC,OAAD,CAAS,IAAT;AAAc,IAAA,OAAO,EAAEH,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADV,CADQ,CAlBF,CANF,CADF;AAmCD;;AAED,eAAeP,GAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport './App.css';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {NoteLine} from './NoteLine';\nimport {loadLine, endEdit} from './LineActions';\nimport {store} from './LineStore';\nimport MathJax from 'react-mathjax';\n\nfunction App() {\n\n\n  const noteLines = useSelector(state => state.noteLines);\n  const lineCount = useSelector(state => state.lineCount);\n  const dispatch = useDispatch();\n\n  useEffect(() =>{\n    dispatch(loadLine({lineNumber: 1, lineContents: \"\"}))\n  },[]);\n\n  //console.log(\"Pre-sort:\" + JSON.stringify(noteLines))\n  //console.log(store.getState())\n  //const sortedLines = Object.values(noteLines).sort((a,b) => a.lineNumber - b.lineNumber);\n  //console.log(\"Post-sort:\" + JSON.stringify(noteLines))\n  var temp = \"Equation: $(3\\\\times 4) \\\\div (5-3)$\"\n  return (\n    <div className=\"App\">\n\n      <div className=\"header\">\n        <div className=\"title\"> Note-Tex </div>\n      </div>\n\n      <div className=\"middle\">\n\n        <div className=\"leftMargin\">\n          {noteLines.length}\n        </div>\n\n        <div className=\"body\">\n        <MathJax.Provider>\n    <div>\n        This is an inline math formula: <MathJax.Node inline formula={'a = b'} />\n        And a block one:\n\n        <MathJax.Node formula={temp} />\n    </div>\n</MathJax.Provider>\n           {noteLines.map(line => <NoteLine key={line.lineNumber + line.lineContents}lineCount={lineCount} noteLine={line}/>)}\n        </div>\n\n        <div className=\"rightMargin\">\n<MathJax.Provider>\n          <MathJax.Node formula={temp} />\n          </ MathJax.Provider>\n        </div>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}